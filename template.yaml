Resources:
  TableCD117FA1:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: CdkDemoStack/Table/Resource
  PostFunctionServiceRole1BB2A70F:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CdkDemoStack/PostFunction/ServiceRole/Resource
  PostFunctionServiceRoleDefaultPolicy2A61B0F2:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - TableCD117FA1
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: PostFunctionServiceRoleDefaultPolicy2A61B0F2
      Roles:
        - Ref: PostFunctionServiceRole1BB2A70F
    Metadata:
      aws:cdk:path: CdkDemoStack/PostFunction/ServiceRole/DefaultPolicy/Resource
  PostFunction61046647:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersec79a509d684e2a79b555fb1f54aaa7ff6745795f2749a398b7a9a8d1c3f5734S3Bucket131AC3A7
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersec79a509d684e2a79b555fb1f54aaa7ff6745795f2749a398b7a9a8d1c3f5734S3VersionKeyA476AAA6
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersec79a509d684e2a79b555fb1f54aaa7ff6745795f2749a398b7a9a8d1c3f5734S3VersionKeyA476AAA6
      Handler: index.post
      Role:
        Fn::GetAtt:
          - PostFunctionServiceRole1BB2A70F
          - Arn
      Runtime: nodejs12.x
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TableCD117FA1
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
    DependsOn:
      - PostFunctionServiceRoleDefaultPolicy2A61B0F2
      - PostFunctionServiceRole1BB2A70F
    Metadata:
      aws:cdk:path: CdkDemoStack/PostFunction/Resource
      aws:asset:path: /home/borislav/Desktop/temp/cdk/4/cdk-demo/cdk.out/asset.ec79a509d684e2a79b555fb1f54aaa7ff6745795f2749a398b7a9a8d1c3f5734
      aws:asset:property: Code
  GetFunctionServiceRoleE63CDF24:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CdkDemoStack/GetFunction/ServiceRole/Resource
  GetFunctionServiceRoleDefaultPolicy6662E031:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - TableCD117FA1
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: GetFunctionServiceRoleDefaultPolicy6662E031
      Roles:
        - Ref: GetFunctionServiceRoleE63CDF24
    Metadata:
      aws:cdk:path: CdkDemoStack/GetFunction/ServiceRole/DefaultPolicy/Resource
  GetFunctionC96F89C4:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters4effa3418cd5eeac7e420a6fb77b7548f2fe15d16c4b3691b30409ab8c8d636dS3Bucket7DBD67C7
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters4effa3418cd5eeac7e420a6fb77b7548f2fe15d16c4b3691b30409ab8c8d636dS3VersionKeyB0F7B053
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters4effa3418cd5eeac7e420a6fb77b7548f2fe15d16c4b3691b30409ab8c8d636dS3VersionKeyB0F7B053
      Handler: index.get
      Role:
        Fn::GetAtt:
          - GetFunctionServiceRoleE63CDF24
          - Arn
      Runtime: nodejs12.x
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TableCD117FA1
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
    DependsOn:
      - GetFunctionServiceRoleDefaultPolicy6662E031
      - GetFunctionServiceRoleE63CDF24
    Metadata:
      aws:cdk:path: CdkDemoStack/GetFunction/Resource
      aws:asset:path: /home/borislav/Desktop/temp/cdk/4/cdk-demo/cdk.out/asset.4effa3418cd5eeac7e420a6fb77b7548f2fe15d16c4b3691b30409ab8c8d636d
      aws:asset:property: Code
  ApiF70053CD:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: Api
      ProtocolType: HTTP
    Metadata:
      aws:cdk:path: CdkDemoStack/Api/Resource
  ApiDefaultStage189A7074:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:
        Ref: ApiF70053CD
      StageName: $default
      AutoDeploy: true
    Metadata:
      aws:cdk:path: CdkDemoStack/Api/DefaultStage/Resource
  ApiPOSTtasksCdkDemoStackApiPOSTtasks3034E9E7Permission97CD4AA5:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - PostFunction61046647
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:eu-central-1:"
            - Ref: AWS::AccountId
            - ":"
            - Ref: ApiF70053CD
            - /*/*/tasks
    Metadata:
      aws:cdk:path: CdkDemoStack/Api/POST--tasks/CdkDemoStackApiPOSTtasks3034E9E7-Permission
  ApiPOSTtasksPOSTtasksIntegrationE3EE7371:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ApiF70053CD
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - PostFunction61046647
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: CdkDemoStack/Api/POST--tasks/POST--tasks-Integration/Resource
  ApiPOSTtasksA41DA87F:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ApiF70053CD
      RouteKey: POST /tasks
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: ApiPOSTtasksPOSTtasksIntegrationE3EE7371
    Metadata:
      aws:cdk:path: CdkDemoStack/Api/POST--tasks/Resource
  ApiGETtasksCdkDemoStackApiGETtasks0BD71918PermissionD322CEF2:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetFunctionC96F89C4
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:eu-central-1:"
            - Ref: AWS::AccountId
            - ":"
            - Ref: ApiF70053CD
            - /*/*/tasks
    Metadata:
      aws:cdk:path: CdkDemoStack/Api/GET--tasks/CdkDemoStackApiGETtasks0BD71918-Permission
  ApiGETtasksGETtasksIntegration68526FC4:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ApiF70053CD
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - GetFunctionC96F89C4
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: CdkDemoStack/Api/GET--tasks/GET--tasks-Integration/Resource
  ApiGETtasks155BC0CF:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ApiF70053CD
      RouteKey: GET /tasks
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: ApiGETtasksGETtasksIntegration68526FC4
    Metadata:
      aws:cdk:path: CdkDemoStack/Api/GET--tasks/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=1.80.0,@aws-cdk/assets=1.80.0,@aws-cdk/aws-apigatewayv2=1.80.0,@aws-cdk/aws-apigatewayv2-integrations=1.80.0,@aws-cdk/aws-applicationautoscaling=1.80.0,@aws-cdk/aws-autoscaling-common=1.80.0,@aws-cdk/aws-cloudwatch=1.80.0,@aws-cdk/aws-codeguruprofiler=1.80.0,@aws-cdk/aws-dynamodb=1.80.0,@aws-cdk/aws-ec2=1.80.0,@aws-cdk/aws-ecr=1.80.0,@aws-cdk/aws-ecr-assets=1.80.0,@aws-cdk/aws-elasticloadbalancingv2=1.80.0,@aws-cdk/aws-events=1.80.0,@aws-cdk/aws-iam=1.80.0,@aws-cdk/aws-kms=1.80.0,@aws-cdk/aws-lambda=1.80.0,@aws-cdk/aws-lambda-nodejs=1.80.0,@aws-cdk/aws-logs=1.80.0,@aws-cdk/aws-s3=1.80.0,@aws-cdk/aws-s3-assets=1.80.0,@aws-cdk/aws-sqs=1.80.0,@aws-cdk/aws-ssm=1.80.0,@aws-cdk/cloud-assembly-schema=1.80.0,@aws-cdk/core=1.80.0,@aws-cdk/custom-resources=1.80.0,@aws-cdk/cx-api=1.80.0,@aws-cdk/region-info=1.80.0,jsii-runtime=node.js/v14.13.0
    Metadata:
      aws:cdk:path: CdkDemoStack/CDKMetadata/Default
Outputs:
  TableName:
    Value:
      Ref: TableCD117FA1
  ApiUrl:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: ApiF70053CD
          - .execute-api.eu-central-1.
          - Ref: AWS::URLSuffix
          - /
Parameters:
  AssetParametersec79a509d684e2a79b555fb1f54aaa7ff6745795f2749a398b7a9a8d1c3f5734S3Bucket131AC3A7:
    Type: String
    Description: S3 bucket for asset "ec79a509d684e2a79b555fb1f54aaa7ff6745795f2749a398b7a9a8d1c3f5734"
  AssetParametersec79a509d684e2a79b555fb1f54aaa7ff6745795f2749a398b7a9a8d1c3f5734S3VersionKeyA476AAA6:
    Type: String
    Description: S3 key for asset version "ec79a509d684e2a79b555fb1f54aaa7ff6745795f2749a398b7a9a8d1c3f5734"
  AssetParametersec79a509d684e2a79b555fb1f54aaa7ff6745795f2749a398b7a9a8d1c3f5734ArtifactHashA57BE09E:
    Type: String
    Description: Artifact hash for asset "ec79a509d684e2a79b555fb1f54aaa7ff6745795f2749a398b7a9a8d1c3f5734"
  AssetParameters4effa3418cd5eeac7e420a6fb77b7548f2fe15d16c4b3691b30409ab8c8d636dS3Bucket7DBD67C7:
    Type: String
    Description: S3 bucket for asset "4effa3418cd5eeac7e420a6fb77b7548f2fe15d16c4b3691b30409ab8c8d636d"
  AssetParameters4effa3418cd5eeac7e420a6fb77b7548f2fe15d16c4b3691b30409ab8c8d636dS3VersionKeyB0F7B053:
    Type: String
    Description: S3 key for asset version "4effa3418cd5eeac7e420a6fb77b7548f2fe15d16c4b3691b30409ab8c8d636d"
  AssetParameters4effa3418cd5eeac7e420a6fb77b7548f2fe15d16c4b3691b30409ab8c8d636dArtifactHashE2A37ED1:
    Type: String
    Description: Artifact hash for asset "4effa3418cd5eeac7e420a6fb77b7548f2fe15d16c4b3691b30409ab8c8d636d"

